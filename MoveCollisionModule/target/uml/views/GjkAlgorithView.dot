#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.4 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// it.gius.pePpe.algorithm.GjkEpaUtilsFunctions
	c34 [label=<<table title="it.gius.pePpe.algorithm.GjkEpaUtilsFunctions" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="LemonChiffon">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GjkEpaUtilsFunctions </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + nearestEdgeInsidePointSimplex2D(simplex : Simplex, q : Vec2, solutionEdge : Simplex.SimplexEdge) </td></tr>
<tr><td align="left" balign="left"> + g(currSol : Vec2, q : Vec2, support : Vec2) : float </td></tr>
<tr><td align="left" balign="left"> + nearestPointSimplex2D(simplex : Simplex, q : Vec2, solution : SimplexSolution) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="arial", fontcolor="black", fontsize=10.0];
	// it.gius.pePpe.algorithm.epa.EpaAlgorithm
	c35 [label=<<table title="it.gius.pePpe.algorithm.epa.EpaAlgorithm" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="LemonChiffon">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EpaAlgorithm </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + penetrationNormalAndDepth(shape : GjkMinkDiffShape, simplex : Simplex, q : Vec2, edgeSolution : Simplex.SimplexEdge) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="arial", fontcolor="black", fontsize=10.0];
	// it.gius.pePpe.algorithm.gjk.SimplexSolution
	c36 [label=<<table title="it.gius.pePpe.algorithm.gjk.SimplexSolution" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="LemonChiffon">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SimplexSolution </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  numVerticesUsed </td></tr>
<tr><td align="left" balign="left">  verticesInSolution </td></tr>
<tr><td align="left" balign="left">  coefficients </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="arial", fontcolor="black", fontsize=10.0];
	// it.gius.pePpe.algorithm.gjk.Simplex
	c37 [label=<<table title="it.gius.pePpe.algorithm.gjk.Simplex" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="LemonChiffon">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Simplex </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + vs : Vec2[] </td></tr>
<tr><td align="left" balign="left"> + witnesses : TwoPointWitness[] </td></tr>
<tr><td align="left" balign="left"> + winding : int </td></tr>
<tr><td align="left" balign="left"> + type : int </td></tr>
<tr><td align="left" balign="left"> + currentDim : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Simplex(type : int) </td></tr>
<tr><td align="left" balign="left"> + correctType(type : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + set(other : Simplex) </td></tr>
<tr><td align="left" balign="left"> + computeWinding() </td></tr>
<tr><td align="left" balign="left"> + insert(insertPoint : Vec2, tpWitness : TwoPointWitness, index : int) </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + equals(obj : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="arial", fontcolor="black", fontsize=10.0];
	// it.gius.pePpe.algorithm.gjk.Simplex.SimplexEdge
	c38 [label=<<table title="it.gius.pePpe.algorithm.gjk.Simplex.SimplexEdge" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="LemonChiffon">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SimplexEdge </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="arial", fontcolor="black", fontsize=10.0];
	// it.gius.pePpe.algorithm.gjk.NotConvergingException
	c39 [label=<<table title="it.gius.pePpe.algorithm.gjk.NotConvergingException" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="LemonChiffon">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NotConvergingException </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="arial", fontcolor="black", fontsize=10.0];
	// it.gius.pePpe.algorithm.gjk.GjkStandardAlgorithm
	c40 [label=<<table title="it.gius.pePpe.algorithm.gjk.GjkStandardAlgorithm" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="LemonChiffon">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GjkStandardAlgorithm </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + iterationCoefficient : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + distance(gjkSingleShape : GjkSingleShape, q : Vec2, sol : DistanceSolution) </td></tr>
<tr><td align="left" balign="left"> + distance(shape : GjkMinkDiffShape, sol : DistanceSolution) </td></tr>
<tr><td align="left" balign="left"> + overlap(shape : GjkMinkDiffShape, overlapSol : GjkOverlapSolution, distSol : DistanceSolution) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="arial", fontcolor="black", fontsize=10.0];
	// it.gius.pePpe.algorithm.gjk.GjkOverlapSolution
	c41 [label=<<table title="it.gius.pePpe.algorithm.gjk.GjkOverlapSolution" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="LemonChiffon">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GjkOverlapSolution </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="arial", fontcolor="black", fontsize=10.0];
	// it.gius.pePpe.algorithm.gjk.shapes.GjkSingleShape
	c42 [label=<<table title="it.gius.pePpe.algorithm.gjk.shapes.GjkSingleShape" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="LemonChiffon">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GjkSingleShape </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="arial", fontcolor="black", fontsize=10.0];
	// it.gius.pePpe.algorithm.gjk.shapes.GjkShapesFactory
	c43 [label=<<table title="it.gius.pePpe.algorithm.gjk.shapes.GjkShapesFactory" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="LemonChiffon">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="arial italic"> GjkShapesFactory </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="arial", fontcolor="black", fontsize=10.0];
	// it.gius.pePpe.algorithm.gjk.shapes.GjkMinkDiffShape
	c44 [label=<<table title="it.gius.pePpe.algorithm.gjk.shapes.GjkMinkDiffShape" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="LemonChiffon">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GjkMinkDiffShape </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="arial", fontcolor="black", fontsize=10.0];
	// it.gius.pePpe.algorithm.epa.EpaAlgorithm DEPEND it.gius.pePpe.algorithm.gjk.Simplex.SimplexEdge
	c35:p -> c38:p [taillabel="", label="&#171;use&return&#187;", headlabel="", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// it.gius.pePpe.algorithm.epa.EpaAlgorithm DEPEND it.gius.pePpe.algorithm.gjk.GjkUtilsFunctions
	c35:p -> c64:p [taillabel="", label="&#171;use&#187;", headlabel="", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// it.gius.pePpe.algorithm.epa.EpaAlgorithm DEPEND it.gius.pePpe.algorithm.gjk.Simplex
	c35:p -> c37:p [taillabel="", label="&#171;use&#187;", headlabel="", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// it.gius.pePpe.algorithm.epa.EpaAlgorithm DEPEND it.gius.pePpe.algorithm.gjk.IGjkAlgorithmShape
	c35:p -> c65:p [taillabel="", label="&#171;use&#187;", headlabel="", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	//it.gius.pePpe.algorithm.gjk.NotConvergingException extends java.lang.RuntimeException
	c66:p -> c39:p [dir=back,arrowtail=empty];
	// it.gius.pePpe.algorithm.gjk.GjkStandardAlgorithm DEPEND it.gius.pePpe.algorithm.gjk.GjkUtilsFunctions
	c40:p -> c64:p [taillabel="", label="&#171;use&#187;", headlabel="", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// it.gius.pePpe.algorithm.gjk.GjkStandardAlgorithm DEPEND it.gius.pePpe.algorithm.gjk.EpaAlgorithm
	c40:p -> c67:p [taillabel="", label="&#171;use&#187;", headlabel="", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// it.gius.pePpe.algorithm.gjk.GjkStandardAlgorithm DEPEND it.gius.pePpe.algorithm.gjk.Simplex
	c40:p -> c37:p [taillabel="", label="&#171;use&#187;", headlabel="", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// it.gius.pePpe.algorithm.gjk.GjkStandardAlgorithm DEPEND it.gius.pePpe.algorithm.gjk.IGjkAlgorithmShape
	c40:p -> c65:p [taillabel="", label="&#171;use&#187;", headlabel="", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// it.gius.pePpe.algorithm.gjk.GjkStandardAlgorithm DEPEND it.gius.pePpe.algorithm.gjk.SimplexSolution
	c40:p -> c36:p [taillabel="", label="&#171;use&#187;", headlabel="", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// it.gius.pePpe.algorithm.gjk.GjkStandardAlgorithm DEPEND it.gius.pePpe.algorithm.gjk.DistanceSolution
	c40:p -> c68:p [taillabel="", label="&#171;return&#187;", headlabel="", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// it.gius.pePpe.algorithm.gjk.GjkStandardAlgorithm DEPEND it.gius.pePpe.algorithm.gjk.OverlapSolution
	c40:p -> c69:p [taillabel="", label="&#171;return&#187;", headlabel="", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// it.gius.pePpe.algorithm.gjk.shapes.GjkMinkDiffShape HAS it.gius.pePpe.algorithm.gjk.IGjkContainedShape
	c44:p -> c70:p [taillabel="0..*", label="shapes", headlabel="2", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=none, arrowtail=ediamond, dir=both];
	// it.gius.pePpe.algorithm.gjk.shapes.GjkMinkDiffShape COMPOSED it.gius.pePpe.algorithm.gjk.Simplex
	c44:p -> c37:p [taillabel="1", label="", headlabel="3", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=none, arrowtail=diamond, dir=both];
	// it.gius.pePpe.algorithm.gjk.shapes.GjkMinkDiffShape COMPOSED it.gius.pePpe.shapes.witness.Witness
	c44:p -> c71:p [taillabel="1", label="", headlabel="2", fontname="arial", fontcolor="black", fontsize=10.0, color="black", arrowhead=none, arrowtail=diamond, dir=both];
	// it.gius.pePpe.algorithm.gjk.DistanceSolution
	c68[label=<<table title="it.gius.pePpe.algorithm.gjk.DistanceSolution" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="LemonChiffon" href="http://java.sun.com/j2se/1.4.2/docs/api/it/gius/pePpe/algorithm/gjk/DistanceSolution.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> it.gius.pePpe.algorithm.gjk.DistanceSolution </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// it.gius.pePpe.shapes.witness.Witness
	c71[label=<<table title="it.gius.pePpe.shapes.witness.Witness" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="LemonChiffon" href="http://java.sun.com/j2se/1.4.2/docs/api/it/gius/pePpe/shapes/witness/Witness.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> it.gius.pePpe.shapes.witness.Witness </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// it.gius.pePpe.algorithm.gjk.GjkUtilsFunctions
	c64[label=<<table title="it.gius.pePpe.algorithm.gjk.GjkUtilsFunctions" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="LemonChiffon" href="http://java.sun.com/j2se/1.4.2/docs/api/it/gius/pePpe/algorithm/gjk/GjkUtilsFunctions.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> it.gius.pePpe.algorithm.gjk.GjkUtilsFunctions </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// it.gius.pePpe.algorithm.gjk.IGjkAlgorithmShape
	c65[label=<<table title="it.gius.pePpe.algorithm.gjk.IGjkAlgorithmShape" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="LemonChiffon" href="http://java.sun.com/j2se/1.4.2/docs/api/it/gius/pePpe/algorithm/gjk/IGjkAlgorithmShape.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> it.gius.pePpe.algorithm.gjk.IGjkAlgorithmShape </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// it.gius.pePpe.algorithm.gjk.EpaAlgorithm
	c67[label=<<table title="it.gius.pePpe.algorithm.gjk.EpaAlgorithm" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="LemonChiffon" href="http://java.sun.com/j2se/1.4.2/docs/api/it/gius/pePpe/algorithm/gjk/EpaAlgorithm.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> it.gius.pePpe.algorithm.gjk.EpaAlgorithm </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// it.gius.pePpe.algorithm.gjk.OverlapSolution
	c69[label=<<table title="it.gius.pePpe.algorithm.gjk.OverlapSolution" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="LemonChiffon" href="http://java.sun.com/j2se/1.4.2/docs/api/it/gius/pePpe/algorithm/gjk/OverlapSolution.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> it.gius.pePpe.algorithm.gjk.OverlapSolution </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
	// java.lang.RuntimeException
	c66 [label=<<table title="java.lang.RuntimeException" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="LemonChiffon" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/RuntimeException.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RuntimeException </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/RuntimeException.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// it.gius.pePpe.algorithm.gjk.IGjkContainedShape
	c70[label=<<table title="it.gius.pePpe.algorithm.gjk.IGjkContainedShape" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="LemonChiffon" href="http://java.sun.com/j2se/1.4.2/docs/api/it/gius/pePpe/algorithm/gjk/IGjkContainedShape.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> it.gius.pePpe.algorithm.gjk.IGjkContainedShape </td></tr>
		</table></td></tr>
		</table>>, fontname="arial", fontcolor="black", fontsize=10.0];
}

